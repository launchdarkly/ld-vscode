{
	"name": "launchdarkly",
	"displayName": "LaunchDarkly",
	"description": "Manage LaunchDarkly feature flags directly from within your code",
	"version": "3.0.6",
	"publisher": "launchdarklyofficial",
	"engines": {
		"vscode": "^1.52.0"
	},
	"repository": "https://github.com/launchdarkly/ld-vscode",
	"categories": [
		"Other"
	],
	"icon": "images/launchdarkly.png",
	"license": "SEE LICENSE IN LICENSE.txt",
	"activationEvents": [
		"onStartupFinished"
	],
	"main": "./dist/extension",
	"contributes": {
		"configuration": {
			"type": "object",
			"title": "LaunchDarkly",
			"properties": {
				"launchdarkly.project": {
					"type": "string",
					"default": "",
					"markdownDescription": "Your LaunchDarkly project key. [More information](https://docs.launchdarkly.com/home/managing-flags/projects)."
				},
				"launchdarkly.env": {
					"type": "string",
					"default": "",
					"markdownDescription": "Your LaunchDarkly environment key. [More information](https://docs.launchdarkly.com/home/managing-flags/environments)"
				},
				"launchdarkly.baseUri": {
					"type": "string",
					"default": "https://app.launchdarkly.com",
					"description": "LaunchDarkly base URI. Change only if you are using the Relay Proxy. [More information](https://docs.launchdarkly.com/home/advanced/relay-proxy/using)"
				},
				"launchdarkly.streamUri": {
					"type": "string",
					"default": "https://stream.launchdarkly.com",
					"markdownDescription": "LaunchDarkly stream URI. Change only if you are using the Relay Proxy. [More information](https://docs.launchdarkly.com/home/advanced/relay-proxy/using)"
				},
				"launchdarkly.enableHover": {
					"type": "boolean",
					"default": true,
					"description": "Enables flag info to be displayed on hover of a valid flag key"
				},
				"launchdarkly.enableAutocomplete": {
					"type": "boolean",
					"default": true,
					"description": "Enable flag key autocompletion"
				},
				"launchdarkly.enableFlagExplorer": {
					"type": "boolean",
					"default": true,
					"description": "Enable feature flag explorer in your sidebar"
				},
				"launchdarkly.refreshRate": {
					"type": "number",
					"default": 120,
					"description": "How often in minutes to refresh feature flag metadata via API. If `0` global flag metadata does not update. Max is 1440 (1 Day)."
				},
				"launchdarkly.enableAliases": {
					"type": "boolean",
					"default": true,
					"markdownDescription": "Enable reading in flag aliases via [Code References](https://docs.launchdarkly.com/integrations/code-references). As of v3 of this extension, Code References is bundled with this extension."
				},
				"launchdarkly.codeRefsRefreshRate": {
					"type": "number",
					"default": 240,
					"description": "How often in minutes to refresh feature flag metadata via API. If `0` code references does not update. Max is 1440 (1 Day)."
				},
				"launchdarkly.enableCodeLens": {
					"type": "boolean",
					"default": false,
					"description": "Control whether flag data is inlined when a reference is found in a file."
				},
				"launchdarkly.enableMetricsExplorer": {
					"type": "boolean",
					"default": false,
					"description": "Enable Metrics Explorer"
				},
				"launchdarkly.accessToken": {
					"type": "string",
					"default": "",
					"description": "LaunchDarkly API access token. DEPRECATED: Run the 'LaunchDarkly: Configure' command instead."
				},
				"launchdarkly.debuggerKey": {
					"type": "string",
					"default": "",
					"description": "LaunchDarkly Debugger Key"
				},
				"launchdarkly.flagsInFile": {
					"type": "boolean",
					"default": "",
					"description": "LaunchDarkly Flags in File"
				}
			}
		},
		"commands": [
			{
				"command": "extension.openInLaunchDarkly",
				"title": "LaunchDarkly: Open in LaunchDarkly",
				"when": "LDFlagToggle"
			},
			{
				"command": "extension.openLDFlagTree",
				"title": "LaunchDarkly: Flag in Treeview",
				"when": "LDFlagToggle"
			},
			{
				"command": "launchdarkly.toggleFlagContext",
				"title": "LaunchDarkly: Toggle Flag",
				"when": "LDFlagToggle"
			},
			{
				"command": "launchdarkly.enableDebugger",
				"title": "LaunchDarkly: Enable Debugger"
			},
			{
				"command": "launchdarkly.OpenFlag",
				"title": "Jump to line in file",
				"icon": {
					"light": "resources/light/flagMultipleSearch.svg",
					"dark": "resources/dark/flagMultipleSearch.svg"
				}
			},
			{
				"command": "extension.configureLaunchDarkly",
				"title": "LaunchDarkly: Configure settings",
				"icon": {
					"light": "resources/light/settings.svg",
					"dark": "resources/dark/settings.svg"
				}
			},
			{
				"command": "launchdarkly.refreshEntry",
				"title": "Refresh feature flags",
				"icon": {
					"light": "resources/light/refresh.svg",
					"dark": "resources/dark/refresh.svg"
				}
			},
			{
				"command": "launchdarkly.copyKey",
				"title": "Copy flag key",
				"icon": {
					"light": "resources/light/clippy.svg",
					"dark": "resources/dark/clippy.svg"
				}
			},
			{
				"command": "launchdarkly.toggleFlag",
				"title": "Toggle Flag"
			},
			{
				"command": "launchdarkly.fallthroughChange",
				"title": "Change Fallthrough Variation"
			},
			{
				"command": "launchdarkly.offChange",
				"title": "Change Off Variation"
			},
			{
				"command": "launchdarkly.treeviewrefresh",
				"title": "Toggle treeview"
			},
			{
				"command": "launchdarkly.enableClientSide",
				"title": "Toggle treeview"
			},
			{
				"command": "launchdarkly.openBrowser",
				"title": "Open in LaunchDarkly",
				"icon": {
					"light": "resources/light/link-external.svg",
					"dark": "resources/dark/link-external.svg"
				}
			},
			{
				"command": "launchdarkly.flagMultipleSearch",
				"title": "Search Flag References",
				"icon": {
					"light": "resources/light/flagMultipleSearch.svg",
					"dark": "resources/dark/flagMultipleSearch.svg"
				}
			}
		],
		"menus": {
			"commandPalette": [
				{
					"command": "launchdarkly.copyKey",
					"when": "false"
				},
				{
					"command": "launchdarkly.openBrowser",
					"when": "false"
				},
				{
					"command": "launchdarkly.refreshEntry",
					"when": "false"
				},
				{
					"command": "launchdarkly.treeviewrefresh",
					"when": "false"
				},
				{
					"command": "launchdarkly.flagMultipleSearch",
					"when": "false"
				},
				{
					"command": "launchdarkly.OpenFlag",
					"when": "false"
				},
				{
					"command": "launchdarkly.enableDebugger",
					"when": "config.launchdarkly.debuggerKey"
				}
			],
			"editor/context": [
				{
					"command": "extension.openInLaunchDarkly",
					"when": "LDFlagToggle",
					"group": "LaunchDarkly"
				},
				{
					"command": "launchdarkly.toggleFlagContext",
					"args": "${LDFlagToggle}",
					"when": "LDFlagToggle",
					"group": "LaunchDarkly@1"
				},
				{
					"command": "extension.openLDFlagTree",
					"when": "LDFlagToggle",
					"group": "LaunchDarkly"
				}
			],
			"view/title": [
				{
					"command": "launchdarkly.refreshEntry",
					"when": "view == launchdarklyFeatureFlags",
					"group": "navigation"
				},
				{
					"command": "extension.configureLaunchDarkly",
					"when": "!!config.accessToken && !!config.project && !!config.env && view == launchdarklyFeatureFlags",
					"group": "navigation"
				}
			],
			"view/item/context": [
				{
					"command": "launchdarkly.copyKey",
					"when": "view == launchdarklyFeatureFlags && viewItem == flagParentItem",
					"group": "inline"
				},
				{
					"command": "launchdarkly.openBrowser",
					"when": "view == launchdarklyFeatureFlags && viewItem == flagParentItem",
					"group": "inline"
				},
				{
					"command": "launchdarkly.flagMultipleSearch",
					"when": "view == launchdarklyFeatureFlags && viewItem == flagParentItem",
					"group": "inline"
				},
				{
					"command": "launchdarkly.toggleFlag",
					"when": "view == launchdarklyFeatureFlags && viewItem == flagParentItem"
				},
				{
					"command": "launchdarkly.fallthroughChange",
					"when": "view == launchdarklyFeatureFlags && viewItem == variationDefault"
				},
				{
					"command": "launchdarkly.fallthroughChange",
					"when": "view == launchdarklyFeatureFlags && viewItem == rollout"
				},
				{
					"command": "launchdarkly.offChange",
					"when": "view == launchdarklyFeatureFlags && viewItem == variationOff"
				},
				{
					"command": "launchdarkly.fallthroughChange",
					"when": "view == launchdarklyFeatureFlags && viewItem == flagParentItem"
				},
				{
					"command": "launchdarkly.offChange",
					"when": "view == launchdarklyFeatureFlags && viewItem == flagParentItem"
				},
				{
					"command": "launchdarkly.OpenFlag",
					"when": "view == launchdarklyFlagList && viewItem == child",
					"group": "inline"
				},
				{
					"command": "launchdarkly.openBrowser",
					"when": "view == launchdarklyFeatureFlags && viewItem == flagViewBrowser || view == launchdarklyMetrics && viewItem == metricViewBrowser",
					"group": "inline"
				}
			]
		},
		"keybindings": [
			{
				"command": "extension.openInLaunchDarkly",
				"key": "ctrl+alt+g",
				"mac": "cmd+alt+g",
				"when": "editorTextFocus"
			}
		],
		"views": {
			"explorer": [
				{
					"id": "launchdarklyFeatureFlags",
					"name": "LaunchDarkly",
					"when": "launchdarkly:enableFlagExplorer"
				},
				{
					"id": "launchdarklyFlagList",
					"name": "LaunchDarkly Flags in File",
					"when": "launchdarkly:enableFlagExplorer"
				},
				{
					"id": "launchdarklyMetrics",
					"name": "LaunchDarkly Metrics"
				}
			]
		},
		"viewsWelcome": [
			{
				"view": "launchdarklyFeatureFlags",
				"contents": "In order to manage LaunchDarkly feature flags, you will need to configure this extension first.\n[Configure](command:extension.configureLaunchDarkly)\n[Read our docs](https://docs.launchdarkly.com/integrations/vscode) to learn more about how to use the LaunchDarkly extension."
			}
		]
	},
	"galleryBanner": {
		"color": "#282828",
		"theme": "dark"
	},
	"homepage": "https://docs.launchdarkly.com/integrations/vscode",
	"bugs": {
		"url": "https://github.com/launchdarkly/ld-vscode/issues"
	},
	"scripts": {
		"vscode:prepublish": "webpack --mode production",
		"compile": "webpack --mode none",
		"watch": "webpack --mode none --watch",
		"pretest": "tsc -p ./ && cp ./package.json ./out/package.json",
		"test": "node ./out/test/runTest.js",
		"lint": "npx eslint . --ext .ts",
		"lint:fix": "npx eslint . --fix --ext .ts",
		"prettier:write": "prettier --single-quote true --print-width 120 --use-tabs true --trailing-comma all --write \"{src,tests}/**/*.ts\"",
		"prettier:check": "prettier --single-quote true --print-width 120 --use-tabs true --trailing-comma all --list-different \"{src,tests}/**/*.ts\"",
		"prepare-beta": "node build/prepare-beta.js"
	},
	"devDependencies": {
		"@types/mocha": "^2.2.32",
		"@types/node": "^6.0.40",
		"@types/pubnub": "4.29.4",
		"@types/vscode": "1.52.0",
		"@typescript-eslint/eslint-plugin": "3.5.0",
		"@typescript-eslint/parser": "3.5.0",
		"eslint": "7.3.1",
		"expect": "26.6.2",
		"expect-mocha-snapshot": "2.0.1",
		"glob": "7.1.6",
		"mocha": "5.2.0",
		"prettier": "^1.5.3",
		"pretty-error": "^2.1.1",
		"ts-loader": "^8.2.0",
		"ts-mockito": "2.6.1",
		"typescript": "^4.2.4",
		"vscode-test": "^1.4.1",
		"webpack": "^5.35.1",
		"webpack-cli": "^4.6.0"
	},
	"dependencies": {
		"@types/lodash": "4.14.116",
		"@types/opn": "5.1.0",
		"axios": "0.21.4",
		"csv-parser": "^2.3.3",
		"gunzip-maybe": "^1.4.2",
		"launchdarkly-api-typescript": "6.0.0",
		"launchdarkly-node-server-sdk": "^5.13.1",
		"lodash": "^4.17.12",
		"lodash.debounce": "4.0.8",
		"lodash.kebabcase": "4.1.1",
		"opn": "5.3.0",
		"pubnub": "4.33.0",
		"request": "^2.34",
		"rimraf": "^3.0.2",
		"tar-fs": "^2.1.1"
	},
	"resolutions": {
		"node.extend": "^1.1.7",
		"lodash": "^4.17.12"
	}
}
